{"ast":null,"code":"var _jsxFileName = \"/home/student/Desktop/photography-website/portfolio-template/src/pages/Campaigns.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n// Components\nimport MainBody from '../components/home/MainBody.jsx';\n// import Content from '../components/home/Content.jsx';\n\n// Configuration variables\nimport { mainBody, campaigns } from \"../editable-stuff/config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  _s();\n  const [youtubeLinks, setYoutubeLinks] = useState([]); // Initialize as an empty array\n\n  useEffect(() => {\n    // Fetch YouTube links from the backend\n    fetch('http://localhost:5000/api/urls').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Set youtubeLinks from the `urls` array in the JSON\n      if (data && Array.isArray(data.urls)) {\n        setYoutubeLinks(data.urls);\n        console.log(youtubeLinks);\n      } else {\n        console.error('Unexpected data format', data);\n      }\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []); // Empty dependency array ensures the fetch runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(Jumbotron, {\n    fluid: true,\n    id: \"projects\",\n    className: \"bg-light m-0\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: youtubeLinks.length > 0 ? youtubeLinks.map((link, index) => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"embed-responsive embed-responsive-16by9\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              className: \"embed-responsive-item\",\n              src: `https://www.youtube.com/embed/${extractVideoId(link)}`,\n              allowFullScreen: true,\n              title: `YouTube video ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No YouTube videos available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n_s(Content, \"5W0JQJyf+XbDzlStrcTH3O05Dek=\");\n_c = Content;\nconst Campaigns = /*#__PURE__*/React.forwardRef(_c2 = (props, ref) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [campaigns.show && /*#__PURE__*/_jsxDEV(MainBody, {\n      gradient: mainBody.gradientColors2\n      //   backgroundPhoto ={mainBody.imagineMyWork}\n      ,\n      title: campaigns.heading,\n      message: campaigns.message,\n      icons: mainBody.icons,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), campaigns.show && /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n});\n_c3 = Campaigns;\nexport default Campaigns;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Campaigns$React.forwardRef\");\n$RefreshReg$(_c3, \"Campaigns\");","map":{"version":3,"names":["React","MainBody","mainBody","campaigns","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","_s","youtubeLinks","setYoutubeLinks","useState","useEffect","fetch","then","response","ok","Error","json","data","Array","isArray","urls","console","log","error","catch","Jumbotron","fluid","id","className","children","Container","Row","length","map","link","index","Col","xs","md","src","extractVideoId","allowFullScreen","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","Campaigns","forwardRef","_c2","props","ref","show","gradient","gradientColors2","heading","message","icons","_c3","$RefreshReg$"],"sources":["/home/student/Desktop/photography-website/portfolio-template/src/pages/Campaigns.jsx"],"sourcesContent":["import React from 'react'\n\n// Components\nimport MainBody from '../components/home/MainBody.jsx'\n// import Content from '../components/home/Content.jsx';\n\n// Configuration variables\nimport { mainBody, campaigns }  from \"../editable-stuff/config.js\"\n\nconst Content = () => {\n    const [youtubeLinks, setYoutubeLinks] = useState([]); // Initialize as an empty array\n  \n    useEffect(() => {\n      // Fetch YouTube links from the backend\n      fetch('http://localhost:5000/api/urls')\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then((data) => {\n          // Set youtubeLinks from the `urls` array in the JSON\n          if (data && Array.isArray(data.urls)) {\n            setYoutubeLinks(data.urls);\n            console.log(youtubeLinks);\n          } else {\n            console.error('Unexpected data format', data);\n          }\n        })\n        .catch((error) => {\n          console.error('There was a problem with the fetch operation:', error);\n        });\n    }, []); // Empty dependency array ensures the fetch runs once when the component mounts\n  \n    return (\n      <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n        <Container>\n          {/* <h2 className=\"display-4 pb-5 text-center\">{heading}</h2> */}\n          <Row className=\"justify-content-center\">\n            {/* Map through YouTube links and display two embedded videos per row */}\n            {youtubeLinks.length > 0 ? (\n              youtubeLinks.map((link, index) => (\n                <Col xs={12} md={6} key={index} className=\"mb-4\">\n                  <div className=\"embed-responsive embed-responsive-16by9\">\n                    <iframe\n                      className=\"embed-responsive-item\"\n                      src={`https://www.youtube.com/embed/${extractVideoId(link)}`}\n                      allowFullScreen\n                      title={`YouTube video ${index + 1}`}\n                    ></iframe>\n                  </div>\n                </Col>\n              ))\n            ) : (\n              <p>No YouTube videos available</p>\n            )}\n          </Row>\n        </Container>\n      </Jumbotron>\n    );\n  };\n\nconst Campaigns = React.forwardRef((props, ref) => {\n    return (\n        <>\n        {campaigns.show && (\n          <MainBody\n          gradient={mainBody.gradientColors2}\n        //   backgroundPhoto ={mainBody.imagineMyWork}\n          title={campaigns.heading}\n          message={campaigns.message}\n          icons={mainBody.icons}\n          ref={ref}\n        />\n        )}\n        {campaigns.show && (\n          <Content />\n        )}\n      </>\n    );\n});\n\nexport default Campaigns;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}